@page "/EditPost/{PostId:int}"
@using Markdig
@using Microsoft.AspNetCore.Identity
@using Blogger.Data
@inject UserManager<User> UserManager
@inject PostService Service
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavManager

@if (_post != null)
{
    <div style="overflow: auto" class="rz-mb-5 rz-mt-5">
        <h3>Edit Post</h3>
        
        <Editor @bind-HtmlValue="@_html" @bind-Title="@_title"/>

        <RadzenStack Orientation="Orientation.Horizontal" class="rz-mt-3">
            <RadzenButton Click="DeletePost" ButtonStyle="ButtonStyle.Danger" Text="Delete" Icon="delete"/>
            <RadzenButton Click="UpdatePost" ButtonStyle="ButtonStyle.Primary" Text="Update" Icon="update"/>
        </RadzenStack>
    </div>
}
else
{
    <h1>Error while trying to fetch the post. Does it exist?</h1>
}



@code {

    [Parameter]
    public int PostId { get; set; }

    
    string _html = "";
    string _title = "";
    
    // User? _user;

    Post? _post;
    
    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = state.User;
        
        if (user.Identity.IsAuthenticated)
        {
            // _user = await UserManager.GetUserAsync(user);
            _post = await Service.GetPostById(PostId);

            _title = _post?.Title ?? "title error";
            _html = _post?.Body ?? "";
        }
        
    }

    async Task UpdatePost()
    {
        if (_post != null)
        {
            _post.Title = _title;
            _post.Body = _html;
            await Service.UpdatePost(_post);
        }
        
    }


    async Task DeletePost()
    {
        await Service.DeletePost(_post);
        NavManager.NavigateTo("/Profile");
    }

}